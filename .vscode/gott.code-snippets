{
	// Place your gott workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create Cog": {
		"prefix": "cog",
		"scope": "python",
		"body": [
			"import disnake",
			"from disnake.ext import commands",
			"",
			"",
			"class $1(commands.Cog):",
    		"    def __init__(self, bot: commands.Bot) -> None:",
        	"        self.bot = bot",
			"",
			"    @commands.slash_command(name=\"$2\")",
    		"    async def $2(self, inter: disnake.ApplicationCommandInteraction):",
        	"        pass",
			"",
			"    $0",
			"",
			"def setup(bot: commands.Bot):",
    		"    bot.add_cog($1(bot))"
		],
		"description": "creates a cog with a slashcommand"
		}
}